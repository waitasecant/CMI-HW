col=c(rgb(0, 1, 0, 0.3), rgb(0, 0, 1, 0.3)), lty = 1:1, lwd = 3, cex=1.2)
hist(df[df$Maternal.Smoker=="False",]$Birth.Weight, col = rgb(0, 0, 1, 0.15),
main = "", xlab="Birth weight of child with Non-smoking mother",
ylab="", probability = TRUE, ylim=c(0,0.035))
print(paste("The mean of birth weight of child with smoking mother and mean of birth weight of child with non-smoking mother is", round(mean(df[df$Maternal.Smoker=="True",]$Birth.Weight),3), "and", round(mean(df[df$Maternal.Smoker=="False",]$Birth.Weight),3), "respectively, hence the difference between them is", round(abs(mean(df[df$Maternal.Smoker=="True",]$Birth.Weight) - mean(df[df$Maternal.Smoker=="False",]$Birth.Weight)),3)))
diff = c()
for (i in 1:1000) {
df$Maternal.Smoker.New = sample(df$Maternal.Smoker)
diff_val = abs(mean(df[df$Maternal.Smoker.New=="True",]$Birth.Weight)-
mean(df[df$Maternal.Smoker.New=="False",]$Birth.Weight))
diff = append(diff, diff_val)
}
print(paste("The mean and variance of differences are",
round(mean(diff),3), round(var(diff),4)))
hist(diff, main = "", xlab="Distribution of difference of means",
ylab="", probability = TRUE, ylim = c(0,1), xlim = c(0,5))
hist(diff, main = "", xlab="Distribution of difference of means",
ylab="", probability = TRUE, ylim = c(0,1), xlim=c(0,10))
points(x=9.2661,y=0,pch=19)
abs(mean(diff)-9.2661) / sqrt(var(diff))
k = 0
while (abs(mean(diff)-9.2661) >= k*sqrt(var(diff))) {
k = k + 1
}
abs(mean(diff)-9.2661) / sqrt(var(diff))
print(paste("The observed difference is", k, "s.d. away from simulated mean of differences"))
k = abs(mean(diff)-9.2661) / sqrt(var(diff))
print(paste("The observed difference is", k, "s.d. away from simulated mean of differences"))
k = abs(mean(diff)-9.2661) / sqrt(var(diff))
print(paste("The observed difference is", round(k,3), "s.d. away from simulated mean of differences"))
k = abs(mean(diff)-9.2661) / sqrt(var(diff))
print(paste("The observed difference is", round(k,2), "s.d. away from simulated mean of differences"))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Inverse CDF
inverse_cdf = function(x, a, c) {
c*(x^(1/a))
}
# Generate 10000 random sample form uniform(0,1)
u = runif(10000)
# Plug in u in place of x to generate realization from f
f_samples = inverse_cdf(x=u, a=5, c=10)
x_val = seq(0,10,0.0001)
par(cex.main=1)
plot(x_val,inverse_cdf(x_val,5,10), type="l",
lwd=2.5, main="Inverse CDF", xlab="", ylab="")
par(cex.main=1)
hist(f_samples, main="Histogram of samples of f",
xlab = "", ylab = "", probability = TRUE)
empirical_mean = mean(f_samples)
print(paste("Empirical Mean", round(empirical_mean,3)))
a =5
c = 10
actual_mean = a*c/(a+1)
print(paste("Actual Mean is", round(actual_mean,3)))
# Samples from Uniform Distribution with mean = 60, variance = 160
unif = runif(10000, min = 160-4*sqrt(30), max = 160+4*sqrt(30))
# Samples from Poisson Distribution with actual mean = 60, variance = 160
pois = rpois(10000,lambda = 160)
# Samples from Normal Distribution with actual mean = 60, variance = 160
norm = rnorm(1000, mean = 160, sd = 4*sqrt(10))
unif_sample = sample(unif, size = 100)
print(paste("Sample mean height from Uniform Distribution is",
round(mean(unif_sample),3)))
pois_sample = sample(pois, size = 100)
print(paste("Sample mean height from Poisson Distribution is",
round(mean(pois_sample),3)))
norm_sample = sample(norm, size = 100)
print(paste("Sample mean height from Normal Distribution is",
round(mean(norm_sample),3)))
unif_dist = c()
pois_dist = c()
norm_dist = c()
for (i in 1:1000){
u = sample(unif, size = 100)
p = sample(pois, size = 100)
n = sample(norm, size = 100)
unif_dist = append(unif_dist, mean(u))
pois_dist = append(pois_dist, mean(p))
norm_dist = append(norm_dist, mean(n))
}
se_unif = sqrt(var(unif_dist))/sqrt(1000)
se_pois = sqrt(var(pois_dist))/sqrt(1000)
se_norm = sqrt(var(norm_dist))/sqrt(1000)
print(paste("Population mean height from Uniform is",
round(mean(unif_dist),3), "and standard error is", round(se_unif,4)))
print(paste("Population mean height from Poisson is",
round(mean(pois_dist),3), "and standard error is", round(se_pois,4)))
print(paste("Population mean height from Normal is",
round(mean(norm_dist),3), "and standard error is", round(se_norm,4)))
par(mfrow = c(1, 3))
par(cex.main=1.7)
hist(unif_dist, main = "Distribution of sample means from Uniform",
xlab = "", y_lab = "", probability = TRUE, ylim=c(0,0.4))
curve(dnorm(x, mean=mean(unif_dist), sd=sqrt(var(unif_dist))),
col="darkblue", lwd=2, add=TRUE)
hist(pois_dist, main = "Distribution of sample means from Poisson",
xlab = "", y_lab = "", probability = TRUE, ylim=c(0,0.4))
curve(dnorm(x, mean=mean(pois_dist), sd=sqrt(var(pois_dist))),
col="darkblue", lwd=2, add=TRUE)
hist(norm_dist, main = "Distribution of sample means from Normal",
xlab = "", y_lab = "", probability = TRUE, ylim=c(0,0.4))
curve(dnorm(x, mean=mean(norm_dist), sd=sqrt(var(norm_dist))),
col="darkblue", lwd=2, add=TRUE)
# Importing libraries
library(tidyverse)
library(dplyr)
library(knitr)
df = read.csv("baby.csv", header = TRUE)
df = subset(df, select = c("Birth.Weight", "Maternal.Smoker"))
head(df,5)
par(mfrow=c(1,3))
par(cex.main=1.7)
hist(df[df$Maternal.Smoker=="True",]$Birth.Weight, col = rgb(0, 1, 0, 0.15),
main = "", xlab="Birth weight of child with smoking mother", ylab="",
probability = TRUE, ylim=c(0,0.035))
hist(df[df$Maternal.Smoker=="True",]$Birth.Weight, col = rgb(0, 1, 0, 0.15),
main = "", xlab="Birth Weight", ylab="", probability = TRUE,
ylim=c(0,0.035), xlim=c(50,180))
hist(df[df$Maternal.Smoker=="False",]$Birth.Weight, col = rgb(0, 0, 1, 0.15),
probability = TRUE, add=TRUE)
legend(120, 0.035, legend=c("Smoking Mother", "Non-Smoking Mother"),
col=c(rgb(0, 1, 0, 0.3), rgb(0, 0, 1, 0.3)), lty = 1:1, lwd = 3, cex=1.2)
hist(df[df$Maternal.Smoker=="False",]$Birth.Weight, col = rgb(0, 0, 1, 0.15),
main = "", xlab="Birth weight of child with Non-smoking mother",
ylab="", probability = TRUE, ylim=c(0,0.035))
print(paste("The mean of birth weight of child with smoking mother and mean of birth weight of child with non-smoking mother is", round(mean(df[df$Maternal.Smoker=="True",]$Birth.Weight),3), "and", round(mean(df[df$Maternal.Smoker=="False",]$Birth.Weight),3), "respectively, hence the difference between them is", round(abs(mean(df[df$Maternal.Smoker=="True",]$Birth.Weight) - mean(df[df$Maternal.Smoker=="False",]$Birth.Weight)),3)))
diff = c()
for (i in 1:1000) {
df$Maternal.Smoker.New = sample(df$Maternal.Smoker)
diff_val = abs(mean(df[df$Maternal.Smoker.New=="True",]$Birth.Weight)-
mean(df[df$Maternal.Smoker.New=="False",]$Birth.Weight))
diff = append(diff, diff_val)
}
print(paste("The mean and variance of differences are",
round(mean(diff),3), round(var(diff),4)))
hist(diff, main = "", xlab="Distribution of difference of means",
ylab="", probability = TRUE, ylim = c(0,1), xlim = c(0,5))
hist(diff, main = "", xlab="Distribution of difference of means",
ylab="", probability = TRUE, ylim = c(0,1), xlim=c(0,10))
points(x=9.2661,y=0,pch=19)
k = abs(mean(diff)-9.2661) / sqrt(var(diff))
print(paste("The observed difference is", round(k,2), "s.d. away from simulated mean of differences"))
sd(unif_dist)
sqrt(var(unif_dist))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Inverse CDF
inverse_cdf = function(x, a, c) {
c*(x^(1/a))
}
# Generate 10000 random sample form uniform(0,1)
u = runif(10000)
# Plug in u in place of x to generate realization from f
f_samples = inverse_cdf(x=u, a=5, c=10)
x_val = seq(0,10,0.0001)
par(cex.main=1)
plot(x_val,inverse_cdf(x_val,5,10), type="l",
lwd=2.5, main="Inverse CDF", xlab="", ylab="")
par(cex.main=1)
hist(f_samples, main="Histogram of samples of f",
xlab = "", ylab = "", probability = TRUE)
empirical_mean = mean(f_samples)
print(paste("Empirical Mean", round(empirical_mean,3)))
a =5
c = 10
actual_mean = a*c/(a+1)
print(paste("Actual Mean is", round(actual_mean,3)))
# Samples from Uniform Distribution with mean = 60, variance = 160
unif = runif(10000, min = 160-4*sqrt(30), max = 160+4*sqrt(30))
# Samples from Poisson Distribution with actual mean = 60, variance = 160
pois = rpois(10000,lambda = 160)
# Samples from Normal Distribution with actual mean = 60, variance = 160
norm = rnorm(1000, mean = 160, sd = 4*sqrt(10))
unif_sample = sample(unif, size = 100)
print(paste("Sample mean height from Uniform Distribution is",
round(mean(unif_sample),3)))
pois_sample = sample(pois, size = 100)
print(paste("Sample mean height from Poisson Distribution is",
round(mean(pois_sample),3)))
norm_sample = sample(norm, size = 100)
print(paste("Sample mean height from Normal Distribution is",
round(mean(norm_sample),3)))
unif_dist = c()
pois_dist = c()
norm_dist = c()
for (i in 1:1000){
u = sample(unif, size = 100)
p = sample(pois, size = 100)
n = sample(norm, size = 100)
unif_dist = append(unif_dist, mean(u))
pois_dist = append(pois_dist, mean(p))
norm_dist = append(norm_dist, mean(n))
}
se_unif = sd(unif_dist)/sqrt(1000)
se_pois = sd(pois_dist)/sqrt(1000)
se_norm = sd(norm_dist)/sqrt(1000)
print(paste("Population mean height from Uniform is",
round(mean(unif_dist),3), "and standard error is", round(se_unif,4)))
print(paste("Population mean height from Poisson is",
round(mean(pois_dist),3), "and standard error is", round(se_pois,4)))
print(paste("Population mean height from Normal is",
round(mean(norm_dist),3), "and standard error is", round(se_norm,4)))
par(mfrow = c(1, 3))
par(cex.main=1.7)
hist(unif_dist, main = "Distribution of sample means from Uniform",
xlab = "", y_lab = "", probability = TRUE, ylim=c(0,0.4))
curve(dnorm(x, mean=mean(unif_dist), sd=sd(unif_dist)),
col="darkblue", lwd=2, add=TRUE)
hist(pois_dist, main = "Distribution of sample means from Poisson",
xlab = "", y_lab = "", probability = TRUE, ylim=c(0,0.4))
curve(dnorm(x, mean=mean(pois_dist), sd=sd(pois_dist)),
col="darkblue", lwd=2, add=TRUE)
hist(norm_dist, main = "Distribution of sample means from Normal",
xlab = "", y_lab = "", probability = TRUE, ylim=c(0,0.4))
curve(dnorm(x, mean=mean(norm_dist), sd=sd(norm_dist)),
col="darkblue", lwd=2, add=TRUE)
# Importing libraries
library(tidyverse)
library(dplyr)
library(knitr)
df = read.csv("baby.csv", header = TRUE)
df = subset(df, select = c("Birth.Weight", "Maternal.Smoker"))
head(df,5)
par(mfrow=c(1,3))
par(cex.main=1.7)
hist(df[df$Maternal.Smoker=="True",]$Birth.Weight, col = rgb(0, 1, 0, 0.15),
main = "", xlab="Birth weight of child with smoking mother", ylab="",
probability = TRUE, ylim=c(0,0.035))
hist(df[df$Maternal.Smoker=="True",]$Birth.Weight, col = rgb(0, 1, 0, 0.15),
main = "", xlab="Birth Weight", ylab="", probability = TRUE,
ylim=c(0,0.035), xlim=c(50,180))
hist(df[df$Maternal.Smoker=="False",]$Birth.Weight, col = rgb(0, 0, 1, 0.15),
probability = TRUE, add=TRUE)
legend(120, 0.035, legend=c("Smoking Mother", "Non-Smoking Mother"),
col=c(rgb(0, 1, 0, 0.3), rgb(0, 0, 1, 0.3)), lty = 1:1, lwd = 3, cex=1.2)
hist(df[df$Maternal.Smoker=="False",]$Birth.Weight, col = rgb(0, 0, 1, 0.15),
main = "", xlab="Birth weight of child with Non-smoking mother",
ylab="", probability = TRUE, ylim=c(0,0.035))
print(paste("The mean of birth weight of child with smoking mother and mean of birth weight of child with non-smoking mother is", round(mean(df[df$Maternal.Smoker=="True",]$Birth.Weight),3), "and", round(mean(df[df$Maternal.Smoker=="False",]$Birth.Weight),3), "respectively, hence the difference between them is", round(abs(mean(df[df$Maternal.Smoker=="True",]$Birth.Weight) - mean(df[df$Maternal.Smoker=="False",]$Birth.Weight)),3)))
diff = c()
for (i in 1:1000) {
df$Maternal.Smoker.New = sample(df$Maternal.Smoker)
diff_val = abs(mean(df[df$Maternal.Smoker.New=="True",]$Birth.Weight)-
mean(df[df$Maternal.Smoker.New=="False",]$Birth.Weight))
diff = append(diff, diff_val)
}
print(paste("The mean and variance of differences are",
round(mean(diff),3), round(var(diff),4)))
hist(diff, main = "", xlab="Distribution of difference of means",
ylab="", probability = TRUE, ylim = c(0,1), xlim = c(0,5))
hist(diff, main = "", xlab="Distribution of difference of means",
ylab="", probability = TRUE, ylim = c(0,1), xlim=c(0,10))
points(x=9.2661,y=0,pch=19)
k = abs(mean(diff)-9.2661) / sd(diff)
print(paste("The observed difference is", round(k,2), "s.d. away from simulated mean of differences"))
abs(mean(diff)-9.2661)
12*sd(diff)
1/144
par(mfrow=c(1,3))
par(cex.main=1.7)
hist(df[df$Maternal.Smoker=="True",]$Birth.Weight, col = rgb(0, 1, 0, 0.15),
main = "", xlab="Birth weight of child with smoking mother", ylab="",
probability = TRUE, ylim=c(0,0.035))
hist(df[df$Maternal.Smoker=="True",]$Birth.Weight, col = rgb(0, 1, 0, 0.15),
main = "", xlab="Birth Weight", ylab="", probability = TRUE,
ylim=c(0,0.035), xlim=c(50,180))
hist(df[df$Maternal.Smoker=="False",]$Birth.Weight, col = rgb(0, 0, 1, 0.15),
probability = TRUE, add=TRUE)
legend(120, 0.035, legend=c("Smoking Mother", "Non-Smoking Mother"),
col=c(rgb(0, 1, 0, 0.3), rgb(0, 0, 1, 0.3)), pch = 20, cex=1.2)
hist(df[df$Maternal.Smoker=="False",]$Birth.Weight, col = rgb(0, 0, 1, 0.15),
main = "", xlab="Birth weight of child with Non-smoking mother",
ylab="", probability = TRUE, ylim=c(0,0.035))
par(mfrow=c(1,3))
par(cex.main=1.7)
hist(df[df$Maternal.Smoker=="True",]$Birth.Weight, col = rgb(0, 1, 0, 0.15),
main = "", xlab="Birth weight of child with smoking mother", ylab="",
probability = TRUE, ylim=c(0,0.035))
hist(df[df$Maternal.Smoker=="True",]$Birth.Weight, col = rgb(0, 1, 0, 0.15),
main = "", xlab="Birth Weight", ylab="", probability = TRUE,
ylim=c(0,0.035), xlim=c(50,180))
hist(df[df$Maternal.Smoker=="False",]$Birth.Weight, col = rgb(0, 0, 1, 0.15),
probability = TRUE, add=TRUE)
legend(120, 0.035, legend=c("Smoking Mother", "Non-Smoking Mother"),
col=c(rgb(0, 1, 0, 0.3), rgb(0, 0, 1, 0.3)), pch = 19, cex=1.2)
hist(df[df$Maternal.Smoker=="False",]$Birth.Weight, col = rgb(0, 0, 1, 0.15),
main = "", xlab="Birth weight of child with Non-smoking mother",
ylab="", probability = TRUE, ylim=c(0,0.035))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Inverse CDF
inverse_cdf = function(x, a, c) {
c*(x^(1/a))
}
# Generate 10000 random sample form uniform(0,1)
u = runif(10000)
# Plug in u in place of x to generate realization from f
f_samples = inverse_cdf(x=u, a=5, c=10)
x_val = seq(0,10,0.0001)
par(cex.main=1)
plot(x_val,inverse_cdf(x_val,5,10), type="l",
lwd=2.5, main="Inverse CDF", xlab="", ylab="")
par(cex.main=1)
hist(f_samples, main="Histogram of samples of f",
xlab = "", ylab = "", probability = TRUE)
empirical_mean = mean(f_samples)
print(paste("Empirical Mean", round(empirical_mean,3)))
a =5
c = 10
actual_mean = a*c/(a+1)
print(paste("Actual Mean is", round(actual_mean,3)))
# Samples from Uniform Distribution with mean = 60, variance = 160
unif = runif(10000, min = 160-4*sqrt(30), max = 160+4*sqrt(30))
# Samples from Poisson Distribution with actual mean = 60, variance = 160
pois = rpois(10000,lambda = 160)
# Samples from Normal Distribution with actual mean = 60, variance = 160
norm = rnorm(1000, mean = 160, sd = 4*sqrt(10))
unif_sample = sample(unif, size = 100)
print(paste("Sample mean height from Uniform Distribution is",
round(mean(unif_sample),3)))
pois_sample = sample(pois, size = 100)
print(paste("Sample mean height from Poisson Distribution is",
round(mean(pois_sample),3)))
norm_sample = sample(norm, size = 100)
print(paste("Sample mean height from Normal Distribution is",
round(mean(norm_sample),3)))
unif_dist = c()
pois_dist = c()
norm_dist = c()
for (i in 1:1000){
u = sample(unif, size = 100)
p = sample(pois, size = 100)
n = sample(norm, size = 100)
unif_dist = append(unif_dist, mean(u))
pois_dist = append(pois_dist, mean(p))
norm_dist = append(norm_dist, mean(n))
}
se_unif = sd(unif_dist)/sqrt(1000)
se_pois = sd(pois_dist)/sqrt(1000)
se_norm = sd(norm_dist)/sqrt(1000)
print(paste("Population mean height from Uniform is",
round(mean(unif_dist),3), "and standard error is", round(se_unif,4)))
print(paste("Population mean height from Poisson is",
round(mean(pois_dist),3), "and standard error is", round(se_pois,4)))
print(paste("Population mean height from Normal is",
round(mean(norm_dist),3), "and standard error is", round(se_norm,4)))
par(mfrow = c(1, 3))
par(cex.main=1.7)
hist(unif_dist, main = "Distribution of sample means from Uniform",
xlab = "", y_lab = "", probability = TRUE, ylim=c(0,0.4))
curve(dnorm(x, mean=mean(unif_dist), sd=sd(unif_dist)),
col="darkblue", lwd=2, add=TRUE)
hist(pois_dist, main = "Distribution of sample means from Poisson",
xlab = "", y_lab = "", probability = TRUE, ylim=c(0,0.4))
curve(dnorm(x, mean=mean(pois_dist), sd=sd(pois_dist)),
col="darkblue", lwd=2, add=TRUE)
hist(norm_dist, main = "Distribution of sample means from Normal",
xlab = "", y_lab = "", probability = TRUE, ylim=c(0,0.4))
curve(dnorm(x, mean=mean(norm_dist), sd=sd(norm_dist)),
col="darkblue", lwd=2, add=TRUE)
# Importing libraries
library(tidyverse)
library(dplyr)
library(knitr)
df = read.csv("baby.csv", header = TRUE)
df = subset(df, select = c("Birth.Weight", "Maternal.Smoker"))
head(df,5)
par(mfrow=c(1,3))
par(cex.main=1.7)
hist(df[df$Maternal.Smoker=="True",]$Birth.Weight, col = rgb(0, 1, 0, 0.15),
main = "", xlab="Birth weight of child with smoking mother", ylab="",
probability = TRUE, ylim=c(0,0.035))
hist(df[df$Maternal.Smoker=="True",]$Birth.Weight, col = rgb(0, 1, 0, 0.15),
main = "", xlab="Birth Weight", ylab="", probability = TRUE,
ylim=c(0,0.035), xlim=c(50,180))
hist(df[df$Maternal.Smoker=="False",]$Birth.Weight, col = rgb(0, 0, 1, 0.15),
probability = TRUE, add=TRUE)
legend(120, 0.035, legend=c("Smoking Mother", "Non-Smoking Mother"),
col=c(rgb(0, 1, 0, 0.3), rgb(0, 0, 1, 0.3)), pch = 19, cex=1.2)
hist(df[df$Maternal.Smoker=="False",]$Birth.Weight, col = rgb(0, 0, 1, 0.15),
main = "", xlab="Birth weight of child with Non-smoking mother",
ylab="", probability = TRUE, ylim=c(0,0.035))
print(paste("The mean of birth weight of child with smoking mother and mean of birth weight of child with non-smoking mother is", round(mean(df[df$Maternal.Smoker=="True",]$Birth.Weight),3), "and", round(mean(df[df$Maternal.Smoker=="False",]$Birth.Weight),3), "respectively, hence the difference between them is", round(abs(mean(df[df$Maternal.Smoker=="True",]$Birth.Weight) - mean(df[df$Maternal.Smoker=="False",]$Birth.Weight)),3)))
diff = c()
for (i in 1:1000) {
df$Maternal.Smoker.New = sample(df$Maternal.Smoker)
diff_val = abs(mean(df[df$Maternal.Smoker.New=="True",]$Birth.Weight)-
mean(df[df$Maternal.Smoker.New=="False",]$Birth.Weight))
diff = append(diff, diff_val)
}
print(paste("The mean and variance of differences are",
round(mean(diff),3), round(var(diff),4)))
hist(diff, main = "", xlab="Distribution of difference of means",
ylab="", probability = TRUE, ylim = c(0,1), xlim = c(0,10))
hist(diff, main = "", xlab="Distribution of difference of means",
ylab="", probability = TRUE, ylim = c(0,1), xlim=c(0,10))
points(x=9.2661,y=0,pch=19)
k = abs(mean(diff)-9.2661) / sd(diff)
print(paste("The observed difference is", round(k,2), "s.d. away from simulated mean of differences"))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
x_val = seq(0,1,0.0001)
par(cex.main=1)
plot(x_val,inverse_cdf(x_val,5,10), type="l",
lwd=2.5, main="Inverse CDF", xlab="", ylab="")
x_val = seq(0,1,0.0001)
par(cex.main=1)
cdf_f = (x/a)^c
x_val = seq(0,1,0.0001)
par(cex.main=1)
cdf_f = function(x, a, c) {
(x/a)^c
}
plot(x_val,cdf_f(x_val,5,10), type="l",
lwd=2.5, main="CDF", xlab="", ylab="")
x_val = seq(0,100,0.0001)
par(cex.main=1)
cdf_f = function(x, a, c) {
(x/a)^c
}
plot(x_val,cdf_f(x_val,5,10), type="l",
lwd=2.5, main="CDF", xlab="", ylab="")
x_val = seq(0,10,0.0001)
par(cex.main=1)
cdf_f = function(x, a, c) {
(x/a)^c
}
plot(x_val,cdf_f(x_val,5,10), type="l",
lwd=2.5, main="CDF", xlab="", ylab="")
x_val = seq(0,10,0.0001)
par(cex.main=1)
cdf_f = function(x, a, c) {
(x/a)^c
}
plot(x_val,cdf_f(x_val,5,10), type="l",
lwd=2.5, main="CDF", xlab="", ylab="", ylim = c(0,1))
x_val = seq(0,5,0.0001)
par(cex.main=1)
cdf_f = function(x, a, c) {
(x/a)^c
}
plot(x_val,cdf_f(x_val,5,10), type="l",
lwd=2.5, main="CDF", xlab="", ylab="", ylim = c(0,1))
x_val = seq(0,5.2,0.0001)
par(cex.main=1)
cdf_f = function(x, a, c) {
(x/a)^c
}
plot(x_val,cdf_f(x_val,5,10), type="l",
lwd=2.5, main="CDF", xlab="", ylab="", ylim = c(0,1))
x_val = seq(0,5,0.0001)
x_val = seq(0,5,0.0001)
par(cex.main=1)
cdf_f = function(x, a, c) {
(x/a)^c
}
plot(x_val,cdf_f(x_val,5,10), type="l",
lwd=2.5, main="CDF", xlab="", ylab="", ylim = c(0,1))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Inverse CDF
inverse_cdf = function(x, a, c) {
c*(x^(1/a))
}
# Generate 10000 random sample form uniform(0,1)
u = runif(10000)
# Plug in u in place of x to generate realization from f
f_samples = inverse_cdf(x=u, c=5, a=10)
x_val = seq(0,1,0.0001)
par(cex.main=1)
plot(x_val,inverse_cdf(x_val,5,10), type="l",
lwd=2.5, main="Inverse CDF", xlab="", ylab="")
x_val = seq(0,1,0.0001)
par(cex.main=1)
plot(x_val,inverse_cdf(x_val,10,5), type="l",
lwd=2.5, main="Inverse CDF", xlab="", ylab="")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Inverse CDF
inverse_cdf = function(x, a, c) {
c*(x^(1/a))
}
# Generate 10000 random sample form uniform(0,1)
u = runif(10000)
# Plug in u in place of x to generate realization from f
f_samples = inverse_cdf(x=u, a=5, c=10)
x_val = seq(0,1,0.0001)
par(cex.main=1)
plot(x_val,inverse_cdf(x_val,5,10), type="l",
lwd=2.5, main="Inverse CDF", xlab="", ylab="")
x_val = seq(0,5,0.0001)
par(cex.main=1)
cdf_f = function(x, a, c) {
(x/a)^c
}
plot(x_val,cdf_f(x_val,5,10), type="l",
lwd=2.5, main="CDF", xlab="", ylab="", ylim = c(0,1))
x_val = seq(0,10,0.0001)
par(cex.main=1)
cdf_f = function(x, a, c) {
(x/c)^a
}
plot(x_val,cdf_f(x_val,5,10), type="l",
lwd=2.5, main="CDF", xlab="", ylab="", ylim = c(0,1))
par(cex.main=1)
hist(f_samples, main="Histogram of samples of f",
xlab = "", ylab = "", probability = TRUE)
par(cex.main=1)
hist(f_samples, main="Histogram of samples of f",
xlab = "", ylab = "", probability = TRUE, ylim = c(0,1))
par(cex.main=1)
hist(f_samples, main="Histogram of samples of f",
xlab = "", ylab = "", probability = TRUE, ylim = c(0,0.5))
inverse_cdf(0.1,5,10)
inverse_cdf(0.01,5,10)
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
